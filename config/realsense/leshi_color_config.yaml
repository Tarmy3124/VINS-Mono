%YAML:1.0

#common parameters
imu_topic: "/imu_raw"
image_topic: "/usb_cam/image_raw/compressed"
output_path: "/home/tarmy/ros/fsb/catkin_visn/output/"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 640
image_height: 480
#第一次校准参数，vins可跑通，不是特别稳
#distortion_parameters:
#   k1: 0.09491638698
#   k2: -0.178793548919
#   p1: -0.0037298260403
#   p2: 0.00082370021983
#projection_parameters:
#   fx: 497.4
#   fy: 497.26
#   cx: 317.80
#   cy: 211.49

##second calibration parameters
distortion_parameters:
   k1:  0.089433966840
   k2: -0.153676776959
   p1:  0.000580660138
   p2:  0.000530725258
projection_parameters:
   fx: 542.73
   fy: 544.03
   cx: 311.45
   cy: 237.25

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 2   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.99964621,  0.01105994,  0.02418954,
           -0.01088975,  0.9999151,  -0.00715601, 
           -0.02426663,  0.00689006,  0.99968178]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.07494282, -0.01077138, -0.00641822]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 15                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1            # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance

#acc_n: 4.9527782727132937e-02        # accelerometer measurement noise standard deviation. #0.2
#gyr_n: 1.6233114515605575e-02      # gyroscope measurement noise standard deviation.     #0.05
#acc_w: 1.2067723561022927e-03        # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 5.0253807355910365e-04      # gyroscope bias random work noise standard deviation.     #4.0e-5


#acc_n: 5.4202481694517642e-02       # accelerometer measurement noise standard deviation. #0.2
#gyr_n: 1.7015923516600185e-02       # gyroscope measurement noise standard deviation.     #0.05
#acc_w: 1.1966973460193610e-03        # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 5.1281301396089514e-04      # gyroscope bias random work noise standard deviation.     #4.0e-5

#6050 calib

#acc_n: 0.82336
#gyr_n: 0.03107
#acc_w: 4.17902e-05
#gyr_w: 2.3240798e-06
#acc_n: 5.8220412249560906e-02
#gyr_n: 2.1970795510283113e-03
#acc_w: 5.9100255227079429e-04
#gyr_w: 3.2867442176201621e-05

acc_n: 0.9493045
gyr_n: 0.027371
acc_w: 5.62898e-05
gyr_w: 2.0770889e-06


g_norm: 9.7949     # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
fast_relocalization: 1             # useful in real-time and large project
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/tarmy/ros/fsb/catkin_visn/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1               # online estimate time offset between camera and imu
td: 0.000                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
